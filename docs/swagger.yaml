basePath: /v1
definitions:
  models.Attributes:
    type: object
  models.Data:
    properties:
      attributes:
        $ref: '#/definitions/models.Attributes'
      id:
        type: string
      relationships:
        $ref: '#/definitions/models.Relationships'
      type:
        $ref: '#/definitions/models.DataTypes'
    type: object
  models.DataTypes:
    enum:
    - users
    type: string
    x-enum-varnames:
    - Users
  models.Error:
    properties:
      detail:
        type: string
      status:
        type: integer
      title:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      errors:
        items:
          $ref: '#/definitions/models.Error'
        type: array
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.Relationships:
    type: object
  models.Response:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Data'
        type: array
    type: object
host: localhost:3001
info:
  contact:
    name: Frens Repo
    url: http://www.github.com/bwoff11/frens
  description: ActivityPub social network API
  license:
    name: MIT License
    url: http://www.github.com/bwoff11/frens/docs/LICENSE.md
  termsOfService: http://swagger.io/terms/
  title: Frens API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      - text/xml
      - application/x-www-form-urlencoded
      - multipart/form-data
      description: Authenticate a user with the given credentials and return a JWT
        token.
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Authenticate User
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logs out the user associated with the provided authentication token.
        The token will no longer be valid.
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
      security:
      - ApiKeyAuth: []
      summary: Logout User
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account and returns a confirmation.
      parameters:
      - description: The user account to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: password
        required: true
        type: string
      - in: formData
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register New User
      tags:
      - Auth
  /auth/verify:
    get:
      consumes:
      - application/json
      description: Verifies the authenticity of the provided authentication token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
      security:
      - ApiKeyAuth: []
      summary: Verify Authentication Token
      tags:
      - Auth
  /blocks:
    get:
      consumes:
      - application/json
      description: Retrieves a list of users blocked by the authenticated user.
      parameters:
      - description: The number of blocks to return.
        in: query
        name: count
        type: string
      - description: The number of blocks to offset the returned blocks by.
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve Blocked Users
      tags:
      - Blocks
  /bookmarks:
    get:
      consumes:
      - application/json
      description: Retrieves a list of posts bookmarked by the authenticated user.
      parameters:
      - description: The number of bookmarks to return.
        in: query
        name: count
        type: string
      - description: Cursor for pagination.
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve User's Bookmarks
      tags:
      - Bookmarks
  /feeds/algorithmic:
    get:
      consumes:
      - application/json
      description: Retrieves the authenticated user's feed, sorted by an algorithm
        to highlight relevant content.
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve Algorithmic Feed
      tags:
      - Feed
  /feeds/chronological:
    get:
      consumes:
      - application/json
      description: Retrieves the authenticated user's feed, sorted by the time of
        the post's creation.
      parameters:
      - description: Cursor for pagination
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve Chronological Feed
      tags:
      - Feed
  /feeds/explore:
    get:
      consumes:
      - application/json
      description: Retrieves a feed of trending or recommended content for the authenticated
        user to discover.
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve Explore Feed
      tags:
      - Feed
  /likes:
    get:
      consumes:
      - application/json
      description: Retrieve likes. If a like ID is provided, it is always used. Otherwise,
        a postID will return all likes for that post. If a userID is also provided,
        it will return either the like for that user/post or an empty array. If only
        a userID is provided, it will return all likes by that user for any post.
      parameters:
      - description: Like ID
        in: query
        name: likeID
        type: string
      - description: Post ID
        in: query
        name: postID
        type: string
      - description: User ID
        in: query
        name: userID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Search Likes
      tags:
      - Likes
  /posts:
    get:
      consumes:
      - application/json
      description: Search for posts with query parameters.
      parameters:
      - description: Post ID
        in: query
        name: postID
        type: string
      - description: User ID
        in: query
        name: userID
        type: string
      - description: The number of posts to return.
        in: query
        name: count
        type: string
      - description: The number of posts to offset the returned posts by.
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Search Posts
      tags:
      - Posts
    post:
      consumes:
      - application/json
      description: Create a new post.
      parameters:
      - description: The text of the post
        in: body
        name: text
        required: true
        schema:
          type: string
      - description: The privacy setting of the post
        in: body
        name: privacy
        required: true
        schema:
          type: string
      - description: The UUIDs of the media files attached to the post
        in: body
        name: mediaIDs
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a post
      tags:
      - Posts
  /posts/{postID}:
    delete:
      consumes:
      - application/json
      description: Delete a post.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Delete a post
      tags:
      - Posts
    get:
      consumes:
      - application/json
      description: Retrieves a post by ID.
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve Post by ID
      tags:
      - Posts
    put:
      consumes:
      - application/json
      description: Update an existing post.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Update a post
      tags:
      - Posts
  /posts/{postID}/bookmarks:
    delete:
      consumes:
      - application/json
      description: Removes the specified post from the authenticated user's bookmarks.
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Unbookmark a Post
      tags:
      - Bookmarks
    post:
      consumes:
      - application/json
      description: Adds the specified post to the authenticated user's bookmarks.
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Bookmark a Post
      tags:
      - Bookmarks
  /posts/{postID}/likes:
    post:
      consumes:
      - application/json
      description: Create a new like for a post.
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Like a Post
      tags:
      - Likes
  /posts/{postID}/likes/:
    delete:
      consumes:
      - application/json
      description: Delete a like for a post.
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: string
      - description: Like ID
        in: path
        name: likeID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Unlike a Post
      tags:
      - Likes
  /users:
    get:
      consumes:
      - application/json
      description: Search for users with query parameters.
      parameters:
      - description: User ID
        in: query
        name: userID
        type: string
      - description: Username
        in: query
        name: username
        type: string
      - description: The number of users to return.
        in: query
        name: count
        type: string
      - description: The number of users to offset the returned users by.
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Search Users
      tags:
      - Users
  /users/{userID}:
    get:
      consumes:
      - application/json
      description: Retrieves a user by ID.
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve User by ID
      tags:
      - Users
  /users/{userID}/blocks:
    delete:
      consumes:
      - application/json
      description: Removes block on the specified user, allowing them to interact
        with the authenticated user.
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Unblock User
      tags:
      - Blocks
    post:
      consumes:
      - application/json
      description: Blocks the specified user from interacting with the authenticated
        user.
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Block User
      tags:
      - Blocks
  /users/{userID}/followers:
    delete:
      consumes:
      - application/json
      description: Unfollow a user by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Unfollow a user by user ID
      tags:
      - Follows
    get:
      consumes:
      - application/json
      description: Get a list of all users that are following a user by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Users Who are Following the Specified User
      tags:
      - Follows
    post:
      consumes:
      - application/json
      description: Follow a user by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Follow a user by user ID
      tags:
      - Follows
  /users/{userID}/following:
    get:
      consumes:
      - application/json
      description: Get a list of all users that a user is following by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Users that the Specified User is Following
      tags:
      - Follows
  /users/{userID}/likes:
    get:
      consumes:
      - application/json
      description: Get likes by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: The number of likes to return.
        in: query
        name: count
        type: string
      - description: The number of likes to offset the returned likes by.
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get likes by user ID
      tags:
      - Likes
  /users/{userID}/posts:
    get:
      consumes:
      - application/json
      description: Get posts by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: The number of posts to return.
        in: query
        name: count
        type: integer
      - description: Cursor to start the page from.
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Posts by User ID
      tags:
      - Posts
  /users/self:
    delete:
      consumes:
      - application/json
      description: Delete the authenticated user's profile.
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete User
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get the authenticated user's profile.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Self
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update the authenticated user's profile.
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update User
      tags:
      - Users
  /users/self/confirm:
    delete:
      consumes:
      - application/json
      description: Confirm the deletion of the authenticated user's profile.
      parameters:
      - description: Confirmation Code
        in: query
        name: confirmationCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Confirm Delete User
      tags:
      - Users
  /users/self/followers:
    get:
      consumes:
      - application/json
      description: Retrieves a list of users following the authenticated user.
      parameters:
      - description: The number of follows to return.
        in: query
        name: count
        type: string
      - description: The number of follows to offset the returned follows by.
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve Users Who are Following the Authenticated User
      tags:
      - Follows
  /users/self/following:
    get:
      consumes:
      - application/json
      description: Retrieves a list of users the authenticated user is following.
      parameters:
      - description: The number of follows to return.
        in: query
        name: count
        type: string
      - description: The number of follows to offset the returned follows by.
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve Users that the Authenticated User is Following
      tags:
      - Follows
swagger: "2.0"
