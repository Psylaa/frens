basePath: /v1
host: localhost:3001
info:
  contact:
    name: Frens Repo
    url: http://www.github.com/bwoff11/frens
  description: ActivityPub social network API
  license:
    name: MIT License
    url: http://www.github.com/bwoff11/frens/docs/LICENSE.md
  termsOfService: http://swagger.io/terms/
  title: Frens API
  version: "1.0"
paths:
  /bookmarks:
    get:
      consumes:
      - application/json
      description: Get bookmarks
      parameters:
      - description: The ID of the user to get bookmarks for. Given bookmarks are
          private, this must be the same as the requestor (defaults to the requestor).
          Admins can get any user's bookmarks
        in: query
        name: userId
        type: string
      - description: The number of bookmarks to return.
        in: query
        name: count
        type: string
      - description: The number of bookmarks to offset the returned bookmarks by e.g.
          offset=10&count=10 would return bookmarks 10-20
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get bookmarks
      tags:
      - Bookmarks
  /bookmarks/{:postId}:
    post:
      consumes:
      - application/json
      description: Create a bookmark for a specific post based on the provided ID
      parameters:
      - description: Post ID
        in: path
        name: postId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a bookmark for a post
      tags:
      - Bookmarks
  /bookmarks/{bookmarkId}:
    delete:
      consumes:
      - application/json
      description: Delete a specific bookmark. Either a bookmark ID or a post ID must
        be provided. If both are provided, the bookmark ID will be used. Only the
        owner of the bookmark can delete it. Admins can delete any bookmark.
      parameters:
      - description: The ID of the bookmark to delete
        in: query
        name: bookmarkId
        required: true
        type: string
      - description: The ID of the post to delete the bookmark for
        in: query
        name: postId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete a bookmark by ID
      tags:
      - Bookmarks
  /feeds/algorithmic:
    get:
      consumes:
      - application/json
      description: Get posts based on a particular algorithm (Not Implemented)
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get algorithm-based feed
      tags:
      - Feed
  /feeds/chronological:
    get:
      consumes:
      - application/json
      description: Get posts in a chronological order
      parameters:
      - description: Cursor for pagination
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get chronological feed
      tags:
      - Feed
  /feeds/explore:
    get:
      consumes:
      - application/json
      description: Get posts for the explore section (Not Implemented)
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get explore feed
      tags:
      - Feed
  /files:
    get:
      consumes:
      - application/json
      description: Retrieve files
      parameters:
      - description: File ID
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get a file
      tags:
      - Files
    post:
      consumes:
      - multipart/form-data
      description: Create a new file from the provided form data
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a new file
      tags:
      - Files
  /files/{fileId}:
    delete:
      consumes:
      - application/json
      description: Delete a specific file using its ID
      parameters:
      - description: File ID
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete a file by ID
      tags:
      - Files
  /follows:
    get:
      consumes:
      - application/json
      description: Retrieve a follow relationship between a source user and a target
        user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get a follow
      tags:
      - Follows
  /follows/{userId}:
    delete:
      consumes:
      - application/json
      description: Delete a follow relationship with the target user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Unfollow a user
      tags:
      - Follows
    post:
      consumes:
      - application/json
      description: Create a follow relationship with the target user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Follow a user
      tags:
      - Follows
  /likes:
    delete:
      consumes:
      - application/json
      description: Delete a specific like
      parameters:
      - description: Like ID
        in: path
        name: likeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete a like
      tags:
      - Likes
    get:
      consumes:
      - application/json
      description: Retrieve a like object consisting of a user and a target post
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get likes
      tags:
      - Likes
  /likes/{:postId}:
    post:
      consumes:
      - application/json
      description: Create a new like for a user based on the provided token
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a like
      tags:
      - Likes
  /login:
    post:
      consumes:
      - application/json
      - text/xml
      - application/x-www-form-urlencoded
      - multipart/form-data
      description: Authenticate a user and return a JWT token
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Login
      tags:
      - Login
  /login/verify:
    get:
      consumes:
      - application/json
      description: Verify a JWT token
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
      security:
      - ApiKeyAuth: []
      summary: Verify Token
      tags:
      - Login
  /posts:
    get:
      consumes:
      - application/json
      description: Retrieve a post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get a post
      tags:
      - Posts
    post:
      consumes:
      - application/json
      description: Create a new post.
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a post
      tags:
      - Posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a post.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Delete a post
      tags:
      - Posts
    put:
      consumes:
      - application/json
      description: Update an existing post.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Update a post
      tags:
      - Posts
  /users:
    delete:
      consumes:
      - application/json
      description: Delete a user.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - Users
  /users/:
    patch:
      consumes:
      - application/json
      description: Update a user.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a user
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Fetch a specific user by their ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get a user by ID
      tags:
      - Users
swagger: "2.0"
