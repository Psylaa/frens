basePath: /v1
host: frens.moe
info:
  contact:
    name: Frens Repo
    url: http://www.github.com/bwoff11/frens
  description: ActivityPub social network API
  license:
    name: MIT License
    url: http://www.github.com/bwoff11/frens/docs/LICENSE.md
  termsOfService: http://swagger.io/terms/
  title: Frens API
  version: "1.0"
paths:
  /bookmarks:
    get:
      consumes:
      - application/json
      description: Get the bookmarks for the user based on the provided token
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get the bookmarks for self
      tags:
      - Bookmarks
    post:
      consumes:
      - application/json
      description: Create a bookmark for a specific post based on the provided ID
      parameters:
      - description: Post ID
        in: body
        name: postId
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a bookmark for a post
      tags:
      - Bookmarks
  /bookmarks/{bookmarkId}:
    delete:
      consumes:
      - application/json
      description: Delete a specific bookmark based on the provided ID
      parameters:
      - description: Bookmark ID
        in: path
        name: bookmarkId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete a bookmark by ID
      tags:
      - Bookmarks
    get:
      consumes:
      - application/json
      description: Get the details of a specific bookmark based on the provided ID
      parameters:
      - description: Bookmark ID
        in: path
        name: bookmarkId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve a bookmark by ID
      tags:
      - Bookmarks
  /bookmarks/count:
    get:
      consumes:
      - application/json
      description: Get the count of bookmarks for the user based on the provided token
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get the count of bookmarks for self
      tags:
      - Bookmarks
  /feed/algo:
    get:
      consumes:
      - application/json
      description: Get posts based on a particular algorithm (Not Implemented)
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get algorithm-based feed
      tags:
      - Feed
  /feed/chrono:
    get:
      consumes:
      - application/json
      description: Get posts in a chronological order
      parameters:
      - description: Cursor for pagination
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get chronological feed
      tags:
      - Feed
  /feed/explore:
    get:
      consumes:
      - application/json
      description: Get posts for the explore section (Not Implemented)
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get explore feed
      tags:
      - Feed
  /files:
    post:
      consumes:
      - multipart/form-data
      description: Create a new file from the provided form data
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a new file
      tags:
      - Files
  /files/{fileId}:
    delete:
      consumes:
      - application/json
      description: Delete a specific file using its ID
      parameters:
      - description: File ID
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete a file by ID
      tags:
      - Files
    get:
      consumes:
      - application/json
      description: Retrieve a specific file using its ID
      parameters:
      - description: File ID
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get a file by ID
      tags:
      - Files
  /follows/:
    get:
      consumes:
      - application/json
      description: Retrieve the followers of a user based on the provided user ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: '{"error":"Invalid ID"}'
          schema:
            type: string
        "500":
          description: '{"error":"Internal server error"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve user's followers
      tags:
      - Follows
  /follows/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a follow relationship with the target user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Unfollow a user
      tags:
      - Follows
    post:
      consumes:
      - application/json
      description: Create a follow relationship with the target user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Follow a user
      tags:
      - Follows
  /likes:
    get:
      consumes:
      - application/json
      description: Retrieve all likes made by the user based on the provided token
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve all likes for a user
      tags:
      - Likes
  /likes/{likeId}:
    delete:
      consumes:
      - application/json
      description: Delete a specific like based on the provided ID
      parameters:
      - description: Like ID
        in: path
        name: likeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete a like by ID
      tags:
      - Likes
    get:
      consumes:
      - application/json
      description: Get the details of a specific like based on the provided ID
      parameters:
      - description: Like ID
        in: path
        name: likeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Retrieve a specific like by ID
      tags:
      - Likes
  /posts:
    post:
      consumes:
      - application/json
      description: Create a new post.
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a post
      tags:
      - posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a post.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Delete a post
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Fetch a specific post by its ID.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get a post by ID
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update an existing post.
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Update a post
      tags:
      - posts
  /users:
    delete:
      consumes:
      - application/json
      description: Delete a user.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - Users
  /users/:
    patch:
      consumes:
      - application/json
      description: Fetch a specific user by their ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get a user by ID
      tags:
      - Bookmarks
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a user
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Fetch a specific user by their ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get a user by ID
      tags:
      - Users
swagger: "2.0"
